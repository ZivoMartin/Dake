use std::net::SocketAddr;

use derive_getters::Getters;
use serde::{Deserialize, Serialize};

use crate::network::utils::parse_raw_ip;

#[derive(Getters, Clone, Serialize, Deserialize)]
pub struct RemoteMakefile {
    makefile: String,
    ip: SocketAddr,
}

impl RemoteMakefile {
    pub fn new(makefile: String, ip: SocketAddr) -> Self {
        RemoteMakefile { makefile, ip }
    }
}

impl TryFrom<dake::lexer::RemoteMakefile> for RemoteMakefile {
    type Error = anyhow::Error;

    fn try_from(m: dake::lexer::RemoteMakefile) -> Result<RemoteMakefile, Self::Error> {
        Ok(Self::new(m.makefile().clone(), parse_raw_ip(m.ip())?))
    }
}
